tictac toe game:

class Board:
    def __init__(self):
        self.board = [' ' for _ in range(9)]  # 3x3 board initialized with spaces

    def display(self):
        print(f"{self.board[0]} | {self.board[1]} | {self.board[2]}")
        print("--+---+--")
        print(f"{self.board[3]} | {self.board[4]} | {self.board[5]}")
        print("--+---+--")
        print(f"{self.board[6]} | {self.board[7]} | {self.board[8]}")
    
    def update(self, position, player):
        if self.board[position] == ' ':
            self.board[position] = player
            return True
        return False

    def check_winner(self):
        winning_combinations = [
            (0, 1, 2), (3, 4, 5), (6, 7, 8),  # horizontal
            (0, 3, 6), (1, 4, 7), (2, 5, 8),  # vertical
            (0, 4, 8), (2, 4, 6)               # diagonal
        ]
        
        for a, b, c in winning_combinations:
            if self.board[a] == self.board[b] == self.board[c] != ' ':
                return self.board[a]
        return None

    def is_full(self):
        return ' ' not in self.board

class Player:
    def __init__(self, name, symbol):
        self.name = name
        self.symbol = symbol
class Game:
    def __init__(self):
        self.board = Board()
        self.players = [
            Player(input("Enter name for Player 1 (X): "), 'X'),
            Player(input("Enter name for Player 2 (O): "), 'O')
        ]
        self.current_player_index = 0

    def switch_player(self):
        self.current_player_index = (self.current_player_index + 1) % 2

    def play(self):
        while True:
            self.board.display()
            current_player = self.players[self.current_player_index]
            move = int(input(f"{current_player.name}'s turn ({current_player.symbol}). Enter position (0-8): "))
            
            if move < 0 or move > 8 or not self.board.update(move, current_player.symbol):
                print("Invalid move! Try again.")
                continue
            
            winner = self.board.check_winner()
            if winner:
                self.board.display()
                print(f"Congratulations {current_player.name}! You have won!")
                break
            
            if self.board.is_full():
                self.board.display()
                print("It's a draw!")
                break
            
            self.switch_player()